テーブル設計に始まり、これまで学習した知恵を振り絞り挑みましたが思うような動作をしなかったりと何度か挫折しかけましたがいざ完成してみると非常に挑戦しがいのある楽しい課題だったように感じます。

課題17ではsessionとDBに登録したIDの一致判定を行う事でログイン者かどうかの判断を行うことやリクエストパラメーターを渡す事でログイン者のみ可能な投稿の編集や削除の表示を区別するなど大規模なユーザー数を見込んだ実装を学習しました。inputから別のページへリクエストパラメーターを渡し表示するなどはsql文を使ったユーザー登録などバックエンドのスキルを存分に盛り込んだ内容となっていて学習した経験が一番役にたった課題でした。

課題18ではディレクトリに書き込み権限を与えるなどこれまでやってこなかった内容が盛り込まれていて興味深い内容でした。
一度保存した画像を表示させる際に文字化けしてしまう現象に頭を抱え調べた結果エンコード化するということを知ったりコードの奥深さに楽しさを覚えた課題でした。
（エンコード化についてはアドバイス頂き別のアプローチにて画像の表示に成功しました故、改めて学習します。）

課題19では制限時間を設けアップデートする処理について学習しました。
「時間の差異をどのタイミングで判定するか」こちらについてもメンターの方にアドバイスを頂いたりと様々なアプローチ手段があり非常に興味深い内容で今回とらなかった記述方法にも改めて挑戦したいと思います。

一部セキュリティのことについても指摘頂けたのは非常に有意義でした。
・XSS（クロスサイトスクリプティング）
・SQLインジェクション
・CSRF（クロスサイトリクエストフォージェリ）
実際の現場では幾多の攻撃を想定し試行に試行を重ねセキュリティを行う必要があると考えます。
本番環境さながら、今後の課題ではより厳しくデバッグを行い提出したいと思います。

反省するポイントとして
指摘頂いたにも関わらず言葉の意味を理解しないまま変更を加えたりしていたことや、
仕様変更の度に少しずつ変わるコードを先を見越して改修できなかったこと（整合性がない）に対してはもう少しやりようがあったように思います。
思考することに慣れてきたとはいえまだまだ甘いなということを身に染みて感じました。

課題17に入った当初はサブ課題含め課題17を1週間でクリアするという目標を掲げていましたが大幅に遅れ2週間かかってしまいました。
自信の理解が深く及んでいないことが浮き彫りになり自信をなくしたことは事実ですが、ここで躓いたからこそ得るものもあり最後までやりとげられたことが更なる自信に繋がりました。

最後にレビューやアドバイスして頂いた方々、ありがとうございました。これからも頑張りますのでよろしくお願いします。
